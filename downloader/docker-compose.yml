---
#
# Downloader - Apps to search, monitor and download media
#
services:

  ########## DOWNLOADERS ##########

  # Transmission OpenVPN - BitTorrent downloader with integrated OpenVPN client
  transmission:
    image: haugene/transmission-openvpn
    container_name: ${TRANSMISSION_CONTAINER_NAME:-transmission}
    volumes:
      - ${APPDATA_DIR}/downloader/transmission:/config
      - ${DATA_DIR}/torrents:/data/completed
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "${TRANSMISSION_PROXY_PORT:-8118}:8118"
      - "${TRANSMISSION_WEBUI_PORT:-9091}:9091"
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/transmission.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${TRANSMISSION_HOSTNAME:-transmission}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.transmission.entrypoints: https
      traefik.http.routers.transmission.middlewares: auth-chain@file
      traefik.http.routers.transmission.rule: Host(`${TRANSMISSION_HOSTNAME:-transmission}.${DOMAIN_NAME}`)
      traefik.http.routers.transmission.service: transmission
      traefik.http.services.transmission.loadbalancer.server.port: 9091
    environment:
      LOCAL_NETWORK: 192.168.0.0/16
      LOG_TO_STDOUT: "true"
      OPENVPN_CONFIG: ${TRANSMISSION_OPENVPN_CONFIG}
      OPENVPN_PROVIDER: ${TRANSMISSION_OPENVPN_PROVIDER}
      OPENVPN_USERNAME: ${TRANSMISSION_OPENVPN_USERNAME}
      OPENVPN_PASSWORD: ${TRANSMISSION_OPENVPN_PASSWORD}
      OPENVPN_OPTS: --inactive 3600 --ping 10 --ping-exit 60
      PUID: ${PUID}
      PGID: ${PGID}
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
      TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,192.168.*.*"
      TRANSMISSION_RPC_USERNAME: ${TRANSMISSION_RPC_USERNAME}
      TRANSMISSION_RPC_PASSWORD: ${TRANSMISSION_RPC_PASSWORD}
      TRANSMISSION_PEER_PORT: ${TRANSMISSION_PEER_PORT}
      TRANSMISSION_HOME: /config/transmission-home
      TRANSMISSION_UMASK: 002
      WEBPROXY_ENABLED: "true"
      TZ: ${TZ}
    restart: unless-stopped
    dns:
      - 1.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0

  # SABnzbd - Usenet NZB downloader 
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd
    container_name: ${SABNZBD_CONTAINER_NAME:-sabnzbd}
    volumes:
      - ${APPDATA_DIR}/downloader/sabnzbd:/config
      - ${DATA_DIR}/usenet:/data/usenet
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/sabnzbd.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${SABNZBD_HOSTNAME:-sabnzbd}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.sabnzbd.entrypoints: "https"
      traefik.http.routers.sabnzbd.middlewares: "auth-chain@file"
      traefik.http.routers.sabnzbd.rule: "Host(`${SABNZBD_HOSTNAME:-sabnzbd}.${DOMAIN_NAME}`)"
      traefik.http.routers.sabnzbd.service: "sabnzbd"
      traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Youtube-dl - Download videos from Youtube or other supported sites
  ytdl:
    image: tzahi12345/youtubedl-material:nightly
    container_name: ${YTDL_CONTAINER_NAME:-ytdl}
    volumes:
      - ${APPDATA_DIR}/downloader/youtube-dl/appdata:/app/appdata
      - ${APPDATA_DIR}/downloader/youtube-dl/subscriptions:/app/subscriptions
      - ${APPDATA_DIR}/downloader/youtube-dl/users:/app/users
      - ${DATA_DIR}/youtube-dl/audio:/app/audio
      - ${DATA_DIR}/youtube-dl/video:/app/video
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/youtubedl.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${YTDL_HOSTNAME:-ytdl}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.ytdl.entrypoints: "https"
      traefik.http.routers.ytdl.middlewares: "auth-chain@file"
      traefik.http.routers.ytdl.rule: "Host(`${YTDL_HOSTNAME:-ytdl}.${DOMAIN_NAME}`)"
      traefik.http.routers.ytdl.service: "ytdl"
      traefik.http.services.ytdl.loadbalancer.server.port: 17442
    environment:
      UID: ${PUID}
      GID: ${PGID}
      TZ: ${TZ}
    networks:
      - traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  ########## INDEXERS ##########

  # Prowlarr - Indexer manager/proxy
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: ${PROWLARR_CONTAINER_NAME:-prowlarr}
    volumes:
      - ${APPDATA_DIR}/downloader/prowlarr:/config
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/prowlarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${PROWLARR_HOSTNAME:-prowlarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.prowlarr.entrypoints: https
      traefik.http.routers.prowlarr.middlewares: auth-chain@file
      traefik.http.routers.prowlarr.rule: Host(`${PROWLARR_HOSTNAME:-prowlarr}.${DOMAIN_NAME}`)
      traefik.http.routers.prowlarr.service: prowlarr
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  ########## MEDIA TRACKERS ##########

  # Sonarr - Monitor selected TV series and download, sort and rename new episodes
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: ${SONARR_CONTAINER_NAME:-sonarr}
    volumes:
      - ${APPDATA_DIR}/downloader/sonarr:/config
      - ${DATA_DIR}:/data
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/sonarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${SONARR_HOSTNAME:-sonarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.sonarr.entrypoints: https
      traefik.http.routers.sonarr.middlewares: auth-chain@file
      traefik.http.routers.sonarr.rule: Host(`${SONARR_HOSTNAME:-sonarr}.${DOMAIN_NAME}`)
      traefik.http.routers.sonarr.service: sonarr
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Radarr - Monitor movies and download, sort and rename them  
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: ${RADARR_CONTAINER_NAME:-radarr}
    volumes:
      - ${APPDATA_DIR}/downloader/radarr:/config
      - ${DATA_DIR}:/data
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/radarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${RADARR_HOSTNAME:-radarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.radarr.entrypoints: https
      traefik.http.routers.radarr.middlewares: auth-chain@file
      traefik.http.routers.radarr.rule: Host(`${RADARR_HOSTNAME:-radarr}.${DOMAIN_NAME}`)
      traefik.http.routers.radarr.service: radarr
      traefik.http.services.radarr.loadbalancer.server.port: 7878
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Lidarr - Monitor music albums and download, sort and rename them  
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: ${LIDARR_CONTAINER_NAME:-lidarr}
    volumes:
      - ${APPDATA_DIR}/downloader/lidarr:/config
      - ${DATA_DIR}:/data
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/lidarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${LIDARR_HOSTNAME:-lidarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.lidarr.entrypoints: https
      traefik.http.routers.lidarr.middlewares: auth-chain@file
      traefik.http.routers.lidarr.rule: Host(`${LIDARR_HOSTNAME:-lidarr}.${DOMAIN_NAME}`)
      traefik.http.routers.lidarr.service: lidarr
      traefik.http.services.lidarr.loadbalancer.server.port: 8686
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # overseerr - Request Management
  overseerr:
    image: lscr.io/linuxserver/overseerr
    container_name: ${overseerr_CONTAINER_NAME:-overseerr}
    volumes:
      - ${APPDATA_DIR}/downloader/overseerr:/config
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/overseerr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${overseerr_HOSTNAME:-overseerr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.overseerr.entrypoints: https
      traefik.http.routers.overseerr.middlewares: auth-chain@file
      traefik.http.routers.overseerr.rule: Host(`${overseerr_HOSTNAME:-overseerr}.${DOMAIN_NAME}`)
      traefik.http.routers.overseerr.service: overseerr
      traefik.http.services.overseerr.loadbalancer.server.port: 5055
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

networks:
  traefik:
    external: true
