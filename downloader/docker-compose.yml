---
#
# Downloader - Apps to search, monitor and download media
#
services:

  # qBittorrent - BiTorrent client
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    volumes:
      - ${APPDATA_DIR}/downloader/qbittorrent:/config
      - ${APPDATA_DIR}/downloader/gluetun:/gluetun
      - ${DATA_DIR}/torrents:/data/torrents
    network_mode: service:gluetun
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/qbittorrent.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${QBITTORRENT_HOSTNAME:-qbittorrent}.${DOMAIN_NAME}
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      WEBUI_PORT: "8080"
      TORRENTING_PORT: "6881"
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - curl --fail http://localhost:8080 || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s
  
  # SABnzbd - Usenet NZB downloader 
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd
    container_name: ${SABNZBD_CONTAINER_NAME:-sabnzbd}
    volumes:
      - ${APPDATA_DIR}/downloader/sabnzbd:/config
      - ${DATA_DIR}/usenet:/data/usenet
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/sabnzbd.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${SABNZBD_HOSTNAME:-sabnzbd}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.sabnzbd.entrypoints: "https"
      traefik.http.routers.sabnzbd.middlewares: "auth-chain@file"
      traefik.http.routers.sabnzbd.rule: "Host(`${SABNZBD_HOSTNAME:-sabnzbd}.${DOMAIN_NAME}`)"
      traefik.http.routers.sabnzbd.service: "sabnzbd"
      traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Youtube-dl - Download videos from Youtube or other supported sites
  ytdl:
    image: tzahi12345/youtubedl-material:nightly
    container_name: ${YTDL_CONTAINER_NAME:-ytdl}
    volumes:
      - ${APPDATA_DIR}/downloader/youtube-dl/appdata:/app/appdata
      - ${APPDATA_DIR}/downloader/youtube-dl/subscriptions:/app/subscriptions
      - ${APPDATA_DIR}/downloader/youtube-dl/users:/app/users
      - ${DATA_DIR}/youtube-dl/audio:/app/audio
      - ${DATA_DIR}/youtube-dl/video:/app/video
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/youtubedl.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${YTDL_HOSTNAME:-ytdl}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.ytdl.entrypoints: "https"
      traefik.http.routers.ytdl.middlewares: "auth-chain@file"
      traefik.http.routers.ytdl.rule: "Host(`${YTDL_HOSTNAME:-ytdl}.${DOMAIN_NAME}`)"
      traefik.http.routers.ytdl.service: "ytdl"
      traefik.http.services.ytdl.loadbalancer.server.port: 17442
    environment:
      UID: ${PUID}
      GID: ${PGID}
      TZ: ${TZ}
    networks:
      - traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Prowlarr - Indexer manager/proxy
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: ${PROWLARR_CONTAINER_NAME:-prowlarr}
    volumes:
      - ${APPDATA_DIR}/downloader/prowlarr:/config
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/prowlarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${PROWLARR_HOSTNAME:-prowlarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.prowlarr.entrypoints: https
      traefik.http.routers.prowlarr.middlewares: auth-chain@file
      traefik.http.routers.prowlarr.rule: Host(`${PROWLARR_HOSTNAME:-prowlarr}.${DOMAIN_NAME}`)
      traefik.http.routers.prowlarr.service: prowlarr
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Sonarr - Monitor selected TV series and download, sort and rename new episodes
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: ${SONARR_CONTAINER_NAME:-sonarr}
    volumes:
      - ${APPDATA_DIR}/downloader/sonarr:/config
      - ${DATA_DIR}:/data
    networks:
      - recyclarr
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/sonarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${SONARR_HOSTNAME:-sonarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.sonarr.entrypoints: https
      traefik.http.routers.sonarr.middlewares: auth-chain@file
      traefik.http.routers.sonarr.rule: Host(`${SONARR_HOSTNAME:-sonarr}.${DOMAIN_NAME}`)
      traefik.http.routers.sonarr.service: sonarr
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Radarr - Monitor movies and download, sort and rename them  
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: ${RADARR_CONTAINER_NAME:-radarr}
    volumes:
      - ${APPDATA_DIR}/downloader/radarr:/config
      - ${DATA_DIR}:/data
    networks:
      - recyclarr
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/radarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${RADARR_HOSTNAME:-radarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.radarr.entrypoints: https
      traefik.http.routers.radarr.middlewares: auth-chain@file
      traefik.http.routers.radarr.rule: Host(`${RADARR_HOSTNAME:-radarr}.${DOMAIN_NAME}`)
      traefik.http.routers.radarr.service: radarr
      traefik.http.services.radarr.loadbalancer.server.port: 7878
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Radarr - Monitor movies and download, sort and rename them  
  radarr-fr:
    image: lscr.io/linuxserver/radarr
    container_name: ${RADARR_CONTAINER_NAME:-radarr}-fr
    volumes:
      - ${APPDATA_DIR}/downloader/radarr-fr:/config
      - ${DATA_DIR}:/data
    networks:
      - recyclarr
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/radarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${RADARR_HOSTNAME:-radarr}-fr.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.radarr-fr.entrypoints: https
      traefik.http.routers.radarr-fr.middlewares: auth-chain@file
      traefik.http.routers.radar-fr.rule: Host(`${RADARR_HOSTNAME:-radarr}-fr.${DOMAIN_NAME}`)
      traefik.http.routers.radarr-fr.service: radarr
      traefik.http.services.radarr-fr.loadbalancer.server.port: 7879
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

   # Lidarr - Monitor music albums and download, sort and rename them  
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: ${LIDARR_CONTAINER_NAME:-lidarr}
    volumes:
      - ${APPDATA_DIR}/downloader/lidarr:/config
      - ${DATA_DIR}:/data
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/lidarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${LIDARR_HOSTNAME:-lidarr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.lidarr.entrypoints: https
      traefik.http.routers.lidarr.middlewares: auth-chain@file
      traefik.http.routers.lidarr.rule: Host(`${LIDARR_HOSTNAME:-lidarr}.${DOMAIN_NAME}`)
      traefik.http.routers.lidarr.service: lidarr
      traefik.http.services.lidarr.loadbalancer.server.port: 8686
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Overseerr - Request Management
  overseerr:
    image: lscr.io/linuxserver/overseerr
    container_name: ${overseerr_CONTAINER_NAME:-overseerr}
    volumes:
      - ${APPDATA_DIR}/downloader/overseerr:/config
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/overseerr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      net.unraid.docker.webui: https://${overseerr_HOSTNAME:-overseerr}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.overseerr.entrypoints: https
      traefik.http.routers.overseerr.middlewares: auth-chain@file
      traefik.http.routers.overseerr.rule: Host(`${overseerr_HOSTNAME:-overseerr}.${DOMAIN_NAME}`)
      traefik.http.routers.overseerr.service: overseerr
      traefik.http.services.overseerr.loadbalancer.server.port: 5055
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Recyclarr - Automatically sync TRaSH Guides to your Sonarr and Radarr instances
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    volumes:
      - ${APPDATA_DIR}/downloader/recyclarr:/config
    networks:
      - recyclarr
    labels:
      net.unraid.docker.icon: ${MY_ICONS_URL}/recyclarr.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
    environment:
      TZ: ${TZ}
    restart: unless-stopped
    user: ${PUID}:${PGID}
    security_opt:
      - no-new-privileges:true

  # Gluetun - VPN Client
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    volumes:
      - ${APPDATA_DIR}/downloader/gluetun:/gluetun
    ports:
      - 8084:8000
    networks:
      - traefik
    labels:
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/gluetun.png
      net.unraid.docker.managed: composeman
      net.unraid.docker.shell: bash
      traefik.enable: "true"
      traefik.http.routers.qbittorrent.entrypoints: https
      traefik.http.routers.qbittorrent.middlewares: auth-chain@file
      traefik.http.routers.qbittorrent.rule: Host(`${QBITTORRENT_HOSTNAME:-qbittorrent}.${DOMAIN_NAME}`)
      traefik.http.routers.qbittorrent.service: qbittorrent
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8080
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      DNS_ADDRESS: 10.2.0.1
      PORT_FORWARD_ONLY: on
      VPN_PORT_FORWARDING: on
      VPN_PORT_FORWARDING_UP_COMMAND: >-
        /bin/sh -c 'wget -O- --retry-connrefused
        --post-data "json={\"listen_port\":{{PORTS}}}"
        http://127.0.0.1:8080/api/v2/app/setPreferences 2>&1'
      VPN_SERVICE_PROVIDER: protonvpn
      VPN_TYPE: wireguard
      WIREGUARD_PRIVATE_KEY: ${WIREGUARD_PRIVATE_KEY}
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun

networks:
  recyclarr:
  traefik:
    external: true
