---
#
# Traefik - Reverse proxy
#
services:

  traefik:
    image: traefik:latest
    container_name: ${TRAEFIK_CONTAINER_NAME:-traefik}
    command:
      - --accessLog=true
      - --accessLog.fields.names.StartUTC=drop
      - --accessLog.filters.statusCodes=400-499
      - --api=true
      - --api.insecure=true
      # Add Cloudflare as DNS Cert Resolver for all services. Also enable TLS.
      # Uncomment next line when testing - LetsEncrypt Staging Server
      # - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory 
      - --certificatesResolvers.dns-cloudflare.acme.email=${ADMIN_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/config/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=90 # To delay DNS check and reduce Let's Encrypt hit rate  
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      - --entrypoints.https.http.tls.certresolver=dns-cloudflare
      - --entrypoints.https.http.tls.domains[0].main=${DOMAIN_NAME}
      - --entrypoints.https.http.tls.domains[0].sans=*.${DOMAIN_NAME}
      - --entryPoints.traefik.address=:8080
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --log=true
      - --log.level=INFO # (Default: ERROR). Valid values: DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.endpoint=tcp://docker-proxy:2375
      - --providers.docker.network=traefik
      - --providers.file.directory=/config/rules # Directory for dynamic configurations
      - --providers.file.watch=true
    volumes:
      - ${APPDATA_DIR}/traefik:/config
      - ./rules:/config/rules
    ports:
      - "80:80"
      - "443:443"
    networks:
      - docker_proxy
      - traefik
    labels:
      net.unraid.docker.managed: composeman
      net.unraid.docker.icon: ${DASHBOARD_ICONS_URL}/traefik.png
      net.unraid.docker.webui: https://${TRAEFIK_HOSTNAME:-traefik}.${DOMAIN_NAME}
      net.unraid.docker.shell: sh
      traefik.enable: "true"
      # HTTP to HTTPS Redirect
      traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
      traefik.http.routers.http-catchall.entrypoints: http
      traefik.http.routers.http-catchall.middlewares: redirect-to-https
      traefik.http.routers.http-catchall.rule: HostRegexp(`{host:.+}`)
      # Traefik Dashboard
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.middlewares: auth-chain@file
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_HOSTNAME:-traefik}.${DOMAIN_NAME}`)
      traefik.http.routers.traefik.service: api@internal
    environment:
      CF_DNS_API_TOKEN_FILE: /run/secrets/cloudflare_api_token
      TZ: ${TZ}
      # Following variables are passed to traefik to use in dynamic rules
      TRAEFIK_FORWARDAUTH_ADDRESS: ${TRAEFIK_FORWARD_AUTH_ADDRESS}
      DOMAIN_NAME: ${DOMAIN_NAME}
    secrets:
      - cloudflare_api_token
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Whoami - Simple test container. Prints HTTP requests.
  whoami:
    image: containous/whoami:latest
    container_name: ${WHOAMI_CONTAINER_NAME:-whoami}
    networks:
      - traefik
    labels:
      net.unraid.docker.managed: composeman
      net.unraid.docker.webui: https://${WHOAMI_HOSTNAME:-whoami}.${DOMAIN_NAME}
      traefik.enable: "true"
      traefik.http.routers.whoami.entrypoints: https
      traefik.http.routers.whoami.middlewares: auth-chain@file
      traefik.http.routers.whoami.rule: Host(`${WHOAMI_HOSTNAME:-whoami}.${DOMAIN_NAME}`)
      traefik.http.routers.whoami.service: whoami
      traefik.http.services.whoami.loadbalancer.server.port: 80
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
  
networks:
  docker_proxy:
    external: true
  traefik:
    external: true

secrets:
  cloudflare_api_token:
    file: ${SECRETS_DIR}/cloudflare_api_token
